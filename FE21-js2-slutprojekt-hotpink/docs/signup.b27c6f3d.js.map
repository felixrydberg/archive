{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,mCCCe,MAAAC,EAKbC,YAAYC,EAAKC,EAAKC,EAAKC,GACzBC,KAAKJ,IAAMA,EACXI,KAAKH,IAAMA,EACXG,KAAKF,IAAMA,EACXE,KAAKD,SAAWA,EAElBE,UACE,OAAOD,KAAKD,WDPf,YENc,WACb,GAAIG,eAAeC,QAAQ,SAAU,CAEnCC,SACGC,eAAe,WACfC,iBAAiB,SAAUC,IAC1BA,EAAEC,iBACFN,eAAeO,QACb,UACAP,eAAeC,QAAQ,QAAQO,eAEjCC,OAAOC,SAASC,QAAQ,qBAGOT,SAASU,cAAc,cAChDC,MAAMC,QAAU,OAGSZ,SAASU,cAAc,cAChDC,MAAMC,QAAU,OAGUZ,SAASU,cAAc,YAChDC,MAAMC,QAAU,QAG3B,IAAIC,EAA+Bb,SAASU,cAAc,cAC1DG,EAAUF,MAAMC,QAAU,QAC1BC,EAAUX,iBAAiB,SAAS,KAClCJ,eAAegB,QACfN,SAASO,aFtBZC,GAI2BhB,SAASU,cAAc,gBAE5CR,iBAAiB,UAAWe,IAC/BA,EAAMb,iBAEN,MAAMc,EAAyBlB,SAASU,cAAc,cAChDlB,EAAwBQ,SAASU,cAAc,aAC/CS,EAAyBnB,SAASU,cAAc,cAChDU,EAAyBpB,SAASU,cAAc,cAGtD,IAAIjB,EADFO,SAASqB,iBAAiB,eAGtBC,SAASC,IACTA,EAAIC,UACN/B,EAAM8B,EAAIE,UAIdC,EACER,EAAKO,MAAMnB,cACXd,EAAIiC,MACJN,EAAKM,MACLL,EAAKK,MACLhC,MAML,MAAKiC,EAAYC,MAChBT,EACA1B,EACA2B,EACAC,EACA3B,WAEUmC,EAAAC,cAAcX,GACtBY,QAAQC,IAAI,GAAGb,oBACNU,EAAAI,SAASb,EAAMC,GACxBU,QAAQC,IAAI,oBACHH,EAAAK,QAAQd,GACjBW,QAAQC,IAAI,yBAEZG,EAAQ,IAAI5C,EAAKE,EAAKC,EAAK0B,EAAMD,EAAKZ,iBAKpC4B,EAAWC,IACfC,EAAAC,IAAID,EAAAE,IAAIlD,EAAAmD,GAAI,UAAUJ,EAAKtC,aAAcsC,GAEzC5B,OAAOC,SAASC,QAAQ,iBA1D3B","sources":["src/script/signup.ts","src/script/modules/user.ts","src/script/modules/navtoggle.ts"],"sourcesContent":["import { db } from './modules/db';\r\nimport { ref, set } from 'firebase/database';\r\nimport { userAvailable, pwdMatch, pwdSpec } from './modules/signfunctions';\r\nimport User from './modules/user';\r\nimport navToggle from './modules/navtoggle';\r\n\r\n(function () {\r\n  // Gömmer och visar specifika knappar i naven\r\n  navToggle();\r\n\r\n  // Sätter Addeventlistner på Formen\r\n  (function () {\r\n    const form: HTMLElement = document.querySelector('.form-signup');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      event.preventDefault();\r\n\r\n      const name: HTMLInputElement = document.querySelector('.form-name');\r\n      const bio: HTMLInputElement = document.querySelector('.form-bio');\r\n      const pwd1: HTMLInputElement = document.querySelector('.form-pwd1');\r\n      const pwd2: HTMLInputElement = document.querySelector('.form-pwd2');\r\n      const radio: NodeListOf<HTMLInputElement> =\r\n        document.querySelectorAll('.form-radio');\r\n      let img: string;\r\n\r\n      radio.forEach((key: HTMLInputElement): void => {\r\n        if (key.checked) {\r\n          img = key.value;\r\n        }\r\n      });\r\n\r\n      checkUser(\r\n        name.value.toLowerCase(),\r\n        bio.value,\r\n        pwd1.value,\r\n        pwd2.value,\r\n        img\r\n      );\r\n    });\r\n  })();\r\n\r\n  // Kollar om användaren uppfyller x antal krav\r\n  const checkUser = async (\r\n    name: string,\r\n    bio: string,\r\n    pwd1: string,\r\n    pwd2: string,\r\n    img: string\r\n  ) => {\r\n    if (await userAvailable(name)) {\r\n      console.log(`${name} is unavailable`);\r\n    } else if (pwdMatch(pwd1, pwd2)) {\r\n      console.log(`Pwd doesnt match`);\r\n    } else if (pwdSpec(pwd1)) {\r\n      console.log(`Pwd doesnt reach spec`);\r\n    } else {\r\n      addUser(new User(bio, img, pwd1, name.toLowerCase()));\r\n    }\r\n  };\r\n\r\n  // Skapar posten i databasen och skickar användaren till index.html\r\n  const addUser = (user: User) => {\r\n    set(ref(db, `/users/${user.getName()}`), user);\r\n\r\n    window.location.replace('./index.html');\r\n  };\r\n})();\r\n","//Användare object\r\nexport default class User {\r\n  private readonly bio;\r\n  private readonly img;\r\n  private readonly pwd;\r\n  private readonly username;\r\n  constructor(bio, img, pwd, username) {\r\n    this.bio = bio;\r\n    this.img = img;\r\n    this.pwd = pwd;\r\n    this.username = username;\r\n  }\r\n  getName() {\r\n    return this.username;\r\n  }\r\n}\r\n","export default function navToggle(): void {\r\n  if (sessionStorage.getItem('login')) {\r\n    // Added clickelement on profile button, which captures login username into profile storage and reroutes to profile\r\n    document\r\n      .getElementById('profile')\r\n      .addEventListener('click', (e: MouseEvent): void => {\r\n        e.preventDefault();\r\n        sessionStorage.setItem(\r\n          'profile',\r\n          sessionStorage.getItem('name').toLowerCase()\r\n        );\r\n        window.location.replace('./profile.html');\r\n      });\r\n\r\n    let btnsignIn: HTMLAnchorElement = document.querySelector('#signinbtn');\r\n    btnsignIn.style.display = 'none';\r\n\r\n    // Slutar visa signup om man är inloggad\r\n    let btnsignUp: HTMLAnchorElement = document.querySelector('#signupbtn');\r\n    btnsignUp.style.display = 'none';\r\n\r\n    // Om man är inloggad visas denna knapp.\r\n    let profilebtn: HTMLAnchorElement = document.querySelector('#profile');\r\n    profilebtn.style.display = 'block';\r\n\r\n    // Om man är inloggad visas denna knapp. Om man trycker på den tas variabler i SessionStorage bort och sidan laddas om\r\n    let btnlogout: HTMLAnchorElement = document.querySelector('#logoutbtn');\r\n    btnlogout.style.display = 'block';\r\n    btnlogout.addEventListener('click', () => {\r\n      sessionStorage.clear();\r\n      location.reload();\r\n    });\r\n  }\r\n}\r\n"],"names":["$fC0jS","parcelRequire","$b5cea7cf5206ea77$export$2e2bcd8739ae039","constructor","bio","img","pwd","username","this","getName","sessionStorage","getItem","document","getElementById","addEventListener","e","preventDefault","setItem","toLowerCase","window","location","replace","querySelector","style","display","btnlogout","clear","reload","$b0cfc8d9550b1f45$export$2e2bcd8739ae039","event","name","pwd1","pwd2","querySelectorAll","forEach","key","checked","value","checkUser","async","$l5TZ6","userAvailable","console","log","pwdMatch","pwdSpec","addUser","user","$8tedJ","set","ref","db"],"version":3,"file":"signup.b27c6f3d.js.map"}